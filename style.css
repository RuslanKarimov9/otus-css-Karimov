html{
    font-size: 62.5%; /*10px*/
    /* "Базовое" значение ширины сайта (значение по макету) = 1440px = 144rem */

    --mobil-margin-top: 80px;
    --desktop-margin-top: 150px;
    --mobil-maxWidth: 1024px; /* iPadPro - 1024 X 1366 */
    --desktop-maxWidth: 1440px;
}
/*
    Здесь использовался тэг "html" т.к. таким образом проще всего задать "опорное" значение для свойства "font-size". 
    Это значение удобно использовать в font-ориентированных классах как единицу (1rem)
*/

body{
    font-family: 'Roboto', sans-serif;
    font-size: 2rem;
    line-height: 2.813rem;

    /*  
        так сбрасываем стандартные отступы и центрируем сайт  
    */    
    margin: 0 auto;
}
/*
    Здесь использовался тэг "body" для задания значений "по-умолчанию" для ряда наследуемых свойств
*/

/* 
    так сбрасываем стандартный стиль ссылок (тэг <a></a>) 
*/
a{
    text-decoration: none;
    color: black;
}

header{
    @media screen and (max-width: 1024px) {
        display: none;
    }
}

/* 
*****************************************************************************************************
    Блок "Меню"
*****************************************************************************************************    
 */
.block-main{
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: var(--desktop-maxWidth);
    margin: 0 auto;

    h1{
        padding-left: 2rem;
    }    
}

.MainMenu{
    /* объявляем собственные параметры */
    --outline: 0px; 

    box-sizing: border-box;
    /* Меню делаем его на флексе */    
    display: flex;
    width: 700px;
    justify-content: space-between;
    align-items: center;

    @media screen and (max-width: 1024px){
        width: 100%;
        height: 82px;
        margin-top: var(--mobil-margin-top);
        border-top: 2px solid black;
        border-bottom: 2px solid black;
    }

    outline: var(--outline) solid limegreen; 
}

.MainMenu_item{
    text-align: center;
    width: 16rem;   

    @media screen and (max-width: 1024px){
        width: 100%;
    }

    outline: var(--outline) solid limegreen; 
}

.MainMenu_item:nth-child(4){
    @media screen and (max-width: 1024px){
        font-weight: 700;
        text-decoration-line: underline;
    }
}
/* 
*****************************************************************************************************
    Блок "Hero"
*****************************************************************************************************    
 */
.Hero{
    /* объявляем собственные параметры */
    --cBlockHeight: 630px;
    --outline: px;

    box-sizing: border-box;
    background-image: url("../img/inside-weather.jpg"); 
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;    
    text-align: center;
    padding-top: 135px;

    max-width: var(--desktop-maxWidth);
    margin: 0 auto;  
    height: var(--cBlockHeight);   

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        width: 100%;
        --cBlockHeight: 420px;

        /* меняем расположение через отступы */        
        margin-top: 344px;
    }
    outline: var(--outline) solid limegreen;  
}

.block-Hero{
    /* объявляем собственные параметры */
    --cBlockHeight: 360px;

    display: inline-block;
    box-sizing: border-box;    
    background-color: white;
    width: 690px;
    height: var(--cBlockHeight); 
    padding-top: 110px;   

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        width: 100%;
        --cBlockHeight: 344px;

        /* ближайший якорь - :root */
        position: absolute;

        /* меняем расположение */        
        top: 0px;
        left: 0px;
    }
    outline: var(--outline) solid limegreen;  
}

.block-Hero-title{
    margin:  0 auto;
}

.block-Hero-text{
    margin: 5px 0;
}

/* 
*****************************************************************************************************
    Статья "Biography"
*****************************************************************************************************    
 */
.art-Biography{
    /*
        "Базовое" значение ширины статьи (значение по макету) = 1165px
        Для придания "резиновости" статье выставляем ширину в %: 81% = 1165px/1440px
        Примечание: делаем это здесь т.к. требуется единообразно расположить 
                    все её секции (см. класс "block-Biography")
    */
    width: 81vw;
    max-width: var(--desktop-maxWidth);
    /* Повторно (под новую ширину) центрируем. */
    margin: 0 auto;        
    margin-top: var(--desktop-margin-top);

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        width: 100%;

        margin: 0; 
        margin-top: var(--mobil-margin-top);
    }    
}

.block-Biography{
/* Настройки полноэкранного макета */

    /* объявляем собственные параметры */
    --cBlockHeight: 840px;
    --outline: 0px;
    /* обявляем контейнер как якорь для абсолютного позиционирования дочерних элементов */
    position: relative; 

    margin: 0;
    height: var(--cBlockHeight);
    
    @media screen and (max-width: 1024px) {
        width: 100%;
        --cBlockHeight: 952px;

        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    };
    outline: var(--outline) solid limegreen;        
}

.block-Biography-elm{
    margin: 0; /* чтобы сбросить встроенные отступы */
    box-sizing: border-box;
    /* в полноэкранном режиме дочерние элементы расставим "вручную" */
    position: absolute; 
    div:nth-child(2){
        display: none;
    }

    @media screen and (max-width: 1024px){
        /* в мобильном режиме - используем особенности Flex-алгоритмов */
        position: static;
    };
    outline: var(--outline) solid limegreen;    
}

.block-Biography-desc{
    left: calc(48% + 100px);
    top: 440px;
    height: 50px;
    min-width: calc(52% - 100px);
    max-width: calc(52% - 100px);
    padding-left: 5rem;

    p{
        margin: 0;
    }
    p:nth-child(1){
        display: block;
    }    
    p:nth-child(2){       
        display: none;
    }

    @media screen and (max-width: 1024px){
        flex-basis: 50%; /* т.к. flex-direction = row, то таким образом задаём ширину элемента */
        height: 15%;
        max-width: 100%;
        padding-left: 1rem;

        p:nth-child(1){
            display: none;
        }    
        p:nth-child(2){
            display: block;
        }        
    }  
}

.block-Biography-title{
    left: 48%;
    height: var(--cBlockHeight);
    width: 100px;
    h2{
        transform: rotate(-90deg) translateX(-30px);
        -webkit-transform: rotate(-90deg) translateX(-30px);
        -moz-transform: rotate(-90deg) translateX(-30px);
        -ms-transform: rotate(-90deg) translateX(-30px);
        -o-transform: rotate(-90deg) translateX(-30px);
};

    @media screen and (max-width: 1024px){
        flex-basis: 50%; /* т.к. flex-direction = row, то таким образом задаём ширину элемента */
        height: 15%;
        h2{
            margin: 0;
            transform: none;
            text-align: right;
            padding-right: 2rem;
        }
    }
}

.block-Biography-cit{
    display: flex;
    left: calc(48% + 100px);
    top: 540px;
    height: 300px;
    min-width: calc(52% - 100px);
    max-width: calc(52% - 100px);
    padding-left: 5rem;
    padding-right: 10rem;
    overflow: hidden;

    @media screen and (max-width: 1024px){
        height: 30%;
        min-width: 100%;
        max-width: 100%;  
        padding-left: 1rem; 
        padding-right: 2rem;   
        align-items: center;
    }  
    
}

.block-Bigraphy-shortline{
    display: flex;
    left: calc(48% + 100px);
    top: 490px;
    height: 50px;
    min-width: calc(52% - 100px);
    max-width: calc(52% - 100px);
    align-items: center;

    div{
        box-sizing: border-box;
        background-color: black;
        width: 2rem;
        height: 0.6rem;
        margin-left: 5rem;
    };

    @media screen and (max-width: 1024px){
        height: 15%;
        flex-basis: 10%; /* т.к. flex-direction = row, то таким образом задаём ширину элемента */
        min-width: 10%;   

        div{
            margin-left: 1rem;
        };        
    }  
}

.block-Biography-text{
    display: flex;
    left: calc(48% + 100px);
    height: 440px;
    min-width: calc(52% - 100px); 
    max-width: calc(52% - 100px);
    h3{
        padding-top: 9rem;
        padding-left: 5rem;
    }
    h3:nth-child(1){
        display: block;
    }
    h3:nth-child(2){
        display: none;
    }
    @media screen and (max-width: 1024px){
        flex-basis: 90%; /* т.к. flex-direction = row, то таким образом задаём ширину элемента */
        height: 15%;
        max-width: 100%;    
        align-items: center;
        h3{
            padding-top: 0rem;
            padding-left: 0rem;
        };   
        h3:nth-child(1){
            display: none;
        }
        h3:nth-child(2){
            display: block;
        }               
    }
}

.block-Biography-img{
    height: var(--cBlockHeight);
    min-width: 48%; /* 541px/1165px = 46.4% */
    max-width: 48%;
    object-fit: cover;
    
    @media screen and (max-width: 1024px){
        min-width: 100%;
        max-width: 100%;    
        height: 40%;
    }
}

/* 
*****************************************************************************************************
    Статья "Designers"
*****************************************************************************************************    
 */
.art_Designers{
/* объявляем собственные параметры */
    --cBlockHeight: 677px;
    --outline: 0px;

    display: flex;
    flex-direction: column;
    /* 
        Этот раздел по ширине не ограничен - 100%, высота по макету - 677px
    */    
    max-width: var(--desktop-maxWidth);
    height: var(--cBlockHeight);
    /* Эту инструкцию можно и не указывать, но пусть будет (для "красоты") */
    margin: 0 auto;
    margin-top: var(--desktop-margin-top);

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        max-width: 100%;
        --cBlockHeight: 573px;        

        margin: 0; 
        margin-top: var(--mobil-margin-top);  
    }     
    outline: var(--outline) solid limegreen;   
}

.art_Designers > h2{
    margin-left: 13.83rem;

    @media screen and (max-width: 1024px) {
        margin-left: 1rem;
    }
}

.block-Designers{
/* Настройки полноэкранного макета */  
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    gap: 2rem;
    height: 100%;
    margin-left: 2rem;
    margin-right: 2rem;
    /* разрешаем скролл в блоке и, как следствие, фиксированную ширину дочерних элементов */
    overflow: auto;

    @media screen and (max-width: 1024px) {
        margin-left: 1rem;
        gap: 1rem;
    }
    outline: var(--outline) solid limegreen; 
}
.block-Designers > section{
    display: flex;
    flex-direction: column;
    /* стандартный блок - 337px по макету */
    max-width: 337px;
    min-width: 337px;
    img{
        object-fit: cover;
        height: 80%;
    }
    p{
        overflow: hidden;
    }

    @media screen and (max-width: 1024px) {
        max-width: 310px;
        min-width: 310px;
        /* так "включаем" использование параметра высоты в дочерних элементах */
        height: 100%;
    }    
}

/* 
здесь обращение к классу "block-item-Designers_L" выполняется не напрямую, а с добавлением
селектора тэга. Это сделано для повышения его веса чтобы перекрыть настройки селектора 
".block-Designers > section" (их веса выравниваются, но за счёт каскадности перекрытие происходит)
*/
section.block-Designers-itemL{
    /* увеличенный блок - 572px по макету - относительно ширины vieport'а это 39.72% */
    max-width: 572px;
    min-width: 572px;
    /* К сожалению не придумал ничего иного, кроме как прямое указание отступа ( */
    p{
        margin-left: 237px;
    }
    
    @media screen and (max-width: 1024px) {
        max-width: 310px;
        min-width: 310px;
        p{
            margin-left: 0;
        }
    }
}

/* 
*****************************************************************************************************
    Статья "Testimonials"
*****************************************************************************************************    
 */
.art_Testimonials{
    --outline: 0px;    
    box-sizing: border-box;
    /*
        "Базовое" значение ширины статьи (значение по макету) = 1400px
        Для придания "резиновости" статье выставляем ширину в %: 97.22% = 1400px/1440px
    */
    width: 97.22vw; /* 1400px/1440px */
    max-width: var(--desktop-maxWidth);

    /* Повторно (под новую ширину) центрируем. */
    margin: 0 auto;
    margin-top: var(--desktop-margin-top);

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        width: 100%;
        margin: 0;
        margin-top: var(--mobil-margin-top); 

        /* ввёл эти отступы чтобы избежать появления гориз. скролла. Причины появления так и не нашёл */
        padding-left: 1rem;
        padding-right: 1rem;        
    }     
    outline: var(--outline) solid limegreen;     
}

.grid-Testimonials{
    /* объявляем собственные параметры */
    --cBlockHeight: 760px;

    display: grid;
    height: var(--cBlockHeight);
    width: 100%;
    /* 
        для практики применим функцию calc, однако можно и проще - 
            grid: repeat(3, 1fr) / repeat(12, 1fr);
    */
    grid: repeat(3, 1fr) / repeat(12, calc(100%/12));
    justify-content: stretch;

    @media screen and (max-width: 1024px) {
        --cBlockHeight: 705px;   
        grid: repeat(12, 1fr) / repeat(2, 1fr);
        grid-template-areas:
        "top top"
        "main main"
        "main main"
        "main main"
        "main main"
        "main main"
        "main main"
        "main main"      
        "main main"
        "main main"          
        "link1 link2"
        "link3 link4";   
    }
    outline: var(--outline) solid limegreen; 
}

.grid-Testimonials-item{
    box-sizing: border-box;
    width: 100%;
    height: 100%;

    outline: var(--outline) solid limegreen;
}

.grid-Testimonials-1{
    grid-area: 1 / 2 / 1 / 2;
    /* Фиксируем блок по-вертикали по верхнему краю (далее за счёт translateX скорректируем положение) */
    align-self: flex-start;
    /* Фиксируем блок по-горизонтали по правому краю (далее за счёт translateY скорректируем положение) */    
    justify-self: flex-end;    
    p{
        --tW: calc(var(--cBlockHeight)/3);
        --tH: 4rem;
        --tXY: calc( (var(--tH) - var(--tW))/2 );   

        margin: 0;
        text-align: center;

        width: var(--tW); 
        height: var(--tH);
        transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -webkit-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -moz-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -ms-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -o-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
    }

    @media screen and (max-width: 1024px) {
        grid-area: link1;
        p{
            transform: none;
            width: 100%;
            height: 100%;   
            padding-top: 1rem;   
            padding-left: 1rem;   
            text-align: left;        
        }
    }    
}

.grid-Testimonials-2{
    grid-area: 2 / 2 / 2 / 2;
    /* Фиксируем блок по-вертикали по верхнему краю (далее за счёт translateX скорректируем положение) */
    align-self: flex-start;
    /* Фиксируем блок по-горизонтали по правому краю (далее за счёт translateY скорректируем положение) */    
    justify-self: flex-end;    
    p{
        --tW: calc(var(--cBlockHeight)/3);
        --tH: 4rem;
        --tXY: calc( (var(--tH) - var(--tW))/2 );   

        margin: 0;
        text-align: center;

        width: var(--tW); 
        height: var(--tH);
        transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -webkit-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -moz-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -ms-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -o-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
    }

    @media screen and (max-width: 1024px) {
        grid-area: link2;
        p{
            transform: none;
            width: 100%;
            height: 100%;     
            padding-top: 1rem;     
            padding-left: 1rem;   
            text-align: left;      
        }
    } 
}

.grid-Testimonials-3{
    grid-area: 3 / 2 / 3 / 2;
    /* Фиксируем блок по-вертикали по верхнему краю (далее за счёт translateX скорректируем положение) */
    align-self: flex-start;
    /* Фиксируем блок по-горизонтали по правому краю (далее за счёт translateY скорректируем положение) */    
    justify-self: flex-end;    
    p{
        --tW: calc(var(--cBlockHeight)/3);
        --tH: 4rem;
        --tXY: calc( (var(--tH) - var(--tW))/2 );   

        margin: 0;
        text-align: center;

        width: var(--tW); 
        height: var(--tH);
        transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -webkit-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -moz-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -ms-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
        -o-transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY)); 
    }

    @media screen and (max-width: 1024px) {
        grid-area: link3;
        p{
            transform: none;
            width: 100%;
            height: 100%;    
            padding-top: 1rem; 
            padding-left: 1rem;   
            text-align: left;            
        }
    } 
}

.grid-Testimonials-4{
    grid-area: 1 / 3 / 4 / 7;
    width: 100%;
    height: 100%;   
    img{
        object-fit: cover;
        width: 100%;
        height: 100%;      
    }

    @media screen and (max-width: 1024px) {
        display: none;
    }    
}

.grid-Testimonials-5{
    grid-area: 1 / 7 / 4 / 7;
    /* Фиксируем блок по-вертикали по верхнему краю (далее за счёт translateX скорректируем положение) */
    align-self: flex-start;
    /* Фиксируем блок по-горизонтали по левому краю (далее за счёт translateY скорректируем положение) */    
    justify-self: flex-start;
    h2{
        --tW: calc(var(--cBlockHeight));
        --tH: 2rem;
        --tXY: calc( (var(--tH) - var(--tW))/2 );        

        margin: 0;
        text-align: right;

        width: var(--tW); 
        height: var(--tH);
        transform: rotate(-90deg) translateX(var(--tXY)) translateY(var(--tXY));
    }

    @media screen and (max-width: 1024px) {
        grid-area: top;
    
        h2{
            transform: none;
            width: 100%;
            height: 100%;
            padding-top: 3rem;
            
        }  
    }      
}


.grid-Testimonials-6{
    grid-area: 1 / 9 / 4 / 11;
    align-self: center;    
    width: 100%;
    height: 100%;   

    blockquote{
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        padding: 0 1rem 0 1rem;
        margin: 0;
        width: 100%;
        height: 50%;

        p{
          margin: 3.1rem 0 1rem 0;
          overflow: hidden;
        }
    }
    img{
        margin: 0;
        object-fit: cover;
        width: 100%;
        height: 50%; 
    } 

    @media screen and (max-width: 1024px) {
        grid-area: main;

        blockquote{
            height: 40%;
        }
        img{
            height: 60%;
        }
    }    
}
/* 
*****************************************************************************************************
    Статья "Strong_points"
*****************************************************************************************************    
 */
.art_Strong_points{
    /* объявляем собственные параметры */
    --cBlockHeight: 613px;
    --outline: 0px;    
    
    /* 
        Этот раздел по ширине не ограничен - 100%, высота по макету - 613px
    */    
    max-width: var(--desktop-maxWidth);
    height: var(--cBlockHeight);
    /* Эту инструкцию можно и не указывать, но пусть будет (для "красоты") */
    margin: 0 auto;
    margin-top: var(--desktop-margin-top);

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        width: 100%;
        --cBlockHeight: 503px;        

        margin: 0; 
        margin-top: var(--mobil-margin-top);  
    }     
    outline: var(--outline) solid limegreen;  
}

.art_Strong_points > h2{
    margin: 0;
    margin-left: 13.8rem;
    /* высота блока - остаток от основного (grid-Strong_points) - 613px-555px = 58px */
    height: 58px; 

    @media screen and (max-width: 1024px) {
        margin-left: 1rem;
        height: 48px; 
    }
}
.grid-Strong_points{
    display: flex;
    align-items: flex-end;
    gap: 2rem;
    /*  
        разрешаем скролл в блоке
    */
    overflow: auto;
    margin-left: 2rem;
    margin-right: 2rem;    

    /* 
        Эту секцию сделаем на Grid, хотя она очень похожа на статью "Designers", которая реализована на Flex.
        Сделаем так для демонстрации различий между Grid и Flex (в реальном проекте следует придерживаться
        единообразия).

        Следующие настройки - стандартная полоса с прокруткой
    */
    @supports (display: grid) {
        display: grid;
        grid: 1fr / auto-flow 1fr;
    }
    /* 
        высота блока - по макету 555px, но указывать её здесь не будем чтобы при масштабировании не появлялся
        вертикальный скролл. Ограничим её указав размер элементов (см. grid-Strong_points-item)
    */

    img{
        object-fit: cover;
    }

    @media screen and (max-width: 1024px) {
        gap: 1rem;
    }
    outline: var(--outline) solid limegreen; 
}

.grid-Strong_points-item{
    box-sizing: border-box;
    /* стандартный блок - 337px по макету */
    width: 337px;
    /* ограничим высоту элементов (555px - по макету) и учтём появление горизонтального скролла ~20px */
    height: 535px; 

    @media screen and (max-width: 1024px) {
        gap: 1rem;
        /* ограничим высоту элементов (455px - по макету) и учтём появление горизонтального скролла ~20px */
        height: 435px; 
        width: 310px;
    }
    outline: var(--outline) solid limegreen; 
}

.grid-Strong_points-item-3{
    /* ширина этого блока - 1000px по макету */
    width: 1000px;
    overflow: hidden;

    h3{
        margin: 0;
        width: 100%;
        text-align: center;
    }
    
    ul{
        margin: 2rem 0;
        padding-left: 9rem;
        /* поменяем стиль маркеров в списке - none - без маркеров */
        list-style-type: none;
    }

    @media screen and (max-width: 1024px) {
        width: 201px; 
        grid-area: 1 / 1 / 1 / 1;

        ul{
            padding-left: 1rem;
        }
        ul > li{
            margin-bottom: 0.5rem;
        }
    }
}

/* 
*****************************************************************************************************
    Меню нижнее
*****************************************************************************************************    
 */ 

.footer-Menu{
    display: none;

    @media screen and (max-width: 1024px){
        max-width: 100%;
        display: flex;
    }
}

/* 
*****************************************************************************************************
    Подвал (footer)
*****************************************************************************************************    
 */ 
footer{
    /* объявляем собственные параметры */
    --cBlockHeight: 168px;
    --outline: 0px; 

    /* 
        Этот раздел по ширине не ограничен - 100%, высота по макету - 168px
    */    
    max-width: var(--desktop-maxWidth);
    height: var(--cBlockHeight);
    /* Эту инструкцию можно и не указывать, но пусть будет (для "красоты") */
    margin: 0 auto;
    margin-top: var(--desktop-margin-top);

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    background-color: #0D0D0D;
    color: #FFFFFF;

    @media screen and (max-width: 1024px) {
        /* меняем размеры */
        max-width: 100%;
        min-width: 100%;
        --cBlockHeight: 193px;        
        margin: 0;  
        margin-top: var(--mobil-margin-top);
        
        flex-direction: column;
        align-items: flex-start;
        justify-content: flex-start;

        position: relative;

        p{
            margin-top: 1rem;
            margin-left: 1rem;
        }
        address{
            margin: 0; 
            margin-top: 70px;
            margin-left: 1rem;
        }
        .Logo{
            position: absolute;
            margin: 0;
            width: calc(100% - 1rem);
            top: 30px;
            left: 0;
            text-align: right;
        }
    }     

    outline: var(--outline) solid red;  
}

.Contacts > a{
    color: #FFFFFF;
}

/* 
*****************************************************************************************************
    Дальше только шрифты...
*****************************************************************************************************    
 */

.font-article-name{
    font-family: 'Roboto';
    font-size: 2.4rem;
    font-weight: 700;
}

.font-main-title{
    font-family: 'Playfair Display';
    font-size: 8.6rem;
    font-weight: 600;
    line-height: 10.32rem;
}

.font-main-menu{
    font-family: 'Roboto';
    font-size: 2.4rem;
    font-weight: 500;

    @media screen and (max-width: 1024px) {
        font-family: 'Bitter';
        font-size: 4.0rem;
        font-weight: 400;
        line-height: 4.8rem;
    }
}

.font-Hero-title{
    font-family: 'Playfair Display';
    font-size: 8.6rem;
    font-weight: 500;
    line-height: 10.32rem;
}

.font-Hero-text{
    font-family: 'Roboto';
    font-size: 2rem;
    font-weight: 500;
    line-height: 2.344rem;
}

.font-Biography-title{
    font-family: 'Playfair Display';
    font-size: 8.6rem;
    font-weight: 500;
    line-height: 11.464rem;

    @media screen and (max-width: 1024px) {
        font-size: 6.4rem;
        font-weight: 400;
        line-height: 8.531rem;        
    }
}

.font-Biography-text{
    font-family: 'Roboto';
    font-size: 1.8rem;
    font-weight: 500;
    line-height: 2.109rem;
}

.font-Biography-cit{
    font-family: 'Bitter';
    font-size: 2.6rem;
    font-weight: 400;
    line-height: 3.12rem;

    @media screen and (max-width: 1024px) {
        font-size: 3rem;
        font-weight: 300;
        line-height: 3.6rem;
    }
}

.font-art-text{
    font-family: 'Roboto';
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 1.875rem;
}

.font-art-text-b{
    font-family: 'Roboto';
    font-size: 1.6rem;
    font-weight: 700;
    line-height: 1.875rem;
}

.font-art-cit{
    font-family: 'Bitter';
    font-size: 3.2rem;
    font-weight: 400;
    line-height: 3.84rem;
    text-align: center;

    @media screen and (max-width: 1024px) {
        font-size: 3.0rem;
        font-weight: 300;
        line-height: 3.6rem;
    }
}

.font-Strong_point-title{
    font-family: 'Playfair Display';
    font-size: 8.6rem;
    font-weight: 500;
    line-height: 8.6rem;   
    
    @media screen and (max-width: 1024px){
        font-size: 4.6rem;
        font-weight: 400;
        line-height: 4.6rem;
    }
}

.font-Strong_point-text{
    font-family: 'Bitter';
    font-size: 3.4rem;
    font-weight: 400;
    line-height: 4.08rem;

    @media screen and (max-width: 1024px){
        font-size: 2.4rem;
        line-height: 2.88rem;
    }
}

.font-Contacts-text{
    font-family: 'Roboto';
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 2.6rem;
}

.font-Logo-text{
    font-family: 'Roboto';
    font-size: 1.8rem;
    font-weight: 500;
    line-height: 2.109rem;
    text-align: center;
}

.font-Logo-text-b{
    font-family: 'Roboto';
    font-size: 2.4rem;
    font-weight: 900;
    line-height: 2.813rem;
    text-align: center;
}

.font-Pricing-text{
    font-family: 'Roboto';
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 1.875rem;
    text-align: right;    
}