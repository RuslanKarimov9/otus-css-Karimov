@import '../../../abstracts/_sys.scss';
@import '../../../abstracts/_variables.scss';
@import '../../../abstracts/_mixins.scss';

.designers-block__content{
    // /* Настройки полноэкранного макета */  
    //     display: flex;
    //     flex-direction: row;
    //     align-items: flex-end;
    //     gap: 2rem;
    //     height: 100%;
    //     margin-left: 2rem;
    //     margin-right: 2rem;
    //     /* разрешаем скролл в блоке и, как следствие, фиксированную ширину дочерних элементов */
    //     overflow: auto;
    
    //     @media screen and (max-width: 1024px) {
    //         margin-left: 1rem;
    //         gap: 1rem;
    //     }
    //     outline: var(--outline) solid limegreen; 

    // Настройки полноэкранного макета 
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    gap: 2rem;
    height: 100%;
    margin-left: 2rem;
    margin-right: 2rem;
    // разрешаем скролл в блоке и, как следствие, фиксированную ширину дочерних элементов 
    overflow: auto;    

    @include screenbreak('medium') {
        margin-left: 1rem;
        gap: 1rem;
    }

    @include showborders;     
}

.designers-block__content > section{
        // display: flex;
        // flex-direction: column;
        // /* стандартный блок - 337px по макету */
        // max-width: 337px;
        // min-width: 337px;
        // img{
        //     object-fit: cover;
        //     height: 80%;
        // }
        // p{
        //     overflow: hidden;
        // }
    
        // @media screen and (max-width: 1024px) {
        //     max-width: 310px;
        //     min-width: 310px;
        //     /* так "включаем" использование параметра высоты в дочерних элементах */
        //     height: 100%;
        // } 

        display: flex;
        flex-direction: column;
        // стандартный блок - 337px по макету 
        max-width: 337px;
        min-width: 337px;

        img{
            object-fit: cover;
            height: 80%;
        }
        p{
            overflow: hidden;
        }     
        
        @include screenbreak('medium') {
            max-width: 310px;
            min-width: 310px;
            // так "включаем" использование параметра высоты в дочерних элементах
            height: 100%;
        }         
}   

// /* 
// *****************************************************************************************************    
//     Модификаторы 
// *****************************************************************************************************        
// */
.designers-block__content_font{
    @include set-font($font-db__content...);
}
    
.designers-block__content_font-b{
    @include set-font($font-db__content-b...);
}

// /* 
// Здесь обращение к классу "designers-block__item_size_L" выполняется не напрямую, а с добавлением
// селектора тэга. Это сделано для повышения его веса чтобы перекрыть настройки селектора 
// ".designers-block__content > section" (их веса выравниваются, но за счёт каскадности перекрытие происходит)

// ВНИМАНИЕ!
//     Необходимо отметить, что такой приём хотя и допускается синтаксически, но его использование - 
//     плохое решение. В особенности, для малых проектов, когда можно достаточно быстро внести изменения,
//     позволяющие отказаться от использования возможностей специфичности
// */
section.designers-block__content_size_L{
    // /* увеличенный блок - 572px по макету - относительно ширины vieport'а это 39.72% */
    // max-width: 572px;
    // min-width: 572px;
    // /* К сожалению не придумал ничего иного, кроме как прямое указание отступа ( */
    // p{
    //     margin-left: 237px;
    // }
    
    // @media screen and (max-width: 1024px) {
    //     max-width: 310px;
    //     min-width: 310px;
    //     p{
    //         margin-left: 0;
    //     }
    // }

    // увеличенный блок - 572px по макету - относительно ширины vieport'а это 39.72% 
    max-width: 572px;
    min-width: 572px;
    // К сожалению не придумал ничего иного, кроме как прямое указание отступа ( 
    p{
        margin-left: 237px;
    }

    @include screenbreak('medium') {
        max-width: 310px;
        min-width: 310px;
        p{
            margin-left: 0;
        }
    }    
}